/*********************************************

 Following is the TreeNode class structure

 class TreeNode {
     int val;
     TreeNode left;
     TreeNode right;
    
     TreeNode(int val) {
         this.val = val;
         this.left = null;
         this.right = null;
     }
 }

 ********/
 import java.util.List;
import java.util.ArrayList;

import java.util.HashMap;
import java.util.Map;
import java.util.Queue;
import java.util.LinkedList;
import java.util.TreeMap;
class Tuple{
    TreeNode node;
    int col;
    public Tuple(TreeNode node,int _col)
    {
        this.node=node;
        col=_col;
    }
}


public class Solution { 
    public static List<Integer> bottomView(TreeNode root) {
        // Write your code here. 
        List<Integer>li=new ArrayList<>();
        Queue<Tuple>q=new LinkedList<Tuple>();
        if(root==null)
        {
            return li;
        }
    
        Map<Integer,Integer>mapp=new TreeMap<>();
        q.offer(new Tuple(root,0));
        while(!q.isEmpty())
        {
            Tuple tuple=q.poll();
            TreeNode node=tuple.node;
            int x=tuple.col;
            if(mapp.get(x)==null)
            {
                mapp.put(x,node.val);
            }
            else
            {
                mapp.put(x,node.val);
            }
            if(node.left!=null)
            {
                q.offer(new Tuple(node.left,x-1));
            }
            if(node.right!=null)
            {
                q.offer(new Tuple(node.right,x+1));
            }

            

        }
         for(Map.Entry<Integer,Integer>entry:mapp.entrySet())
         {
             li.add(entry.getValue());
         }
         return li;


    }
}
